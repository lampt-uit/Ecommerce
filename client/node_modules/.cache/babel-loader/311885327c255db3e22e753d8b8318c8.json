{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserAPI = token => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/info', {\n            headers: {\n              Authorization: token\n            }\n          }); // console.log(res);\n\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (error) {\n          alert(error.res.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n};\n\n_s(UserAPI, \"/0VDIA3txUMwdUWA8vY9yR8e4Rg=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/Ecommerce/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","data","role","error","alert","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIG,KAAJ,EAAW;AACV,YAAMK,OAAO,GAAG,YAAY;AAC3B,YAAI;AACH,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,YAAV,EAAwB;AACzCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAET;AAAjB;AADgC,WAAxB,CAAlB,CADG,CAKH;;AAEAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBP,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACA,SATD,CASE,OAAOQ,KAAP,EAAc;AACfC,UAAAA,KAAK,CAACD,KAAK,CAACN,GAAN,CAAUI,IAAV,CAAeI,GAAhB,CAAL;AACA;AACD,OAbD;;AAcAT,MAAAA,OAAO;AACP;AACD,GAlBQ,EAkBN,CAACL,KAAD,CAlBM,CAAT;AAmBA,SAAO;AACNC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADJ;AAENC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAFH,GAAP;AAIA,CA1BD;;GAAML,O;;KAAAA,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserAPI = (token) => {\r\n\tconst [isLogged, setIsLogged] = useState(false);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconst getUser = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await axios.get('/user/info', {\r\n\t\t\t\t\t\theaders: { Authorization: token }\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// console.log(res);\r\n\r\n\t\t\t\t\tsetIsLogged(true);\r\n\t\t\t\t\tres.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\talert(error.res.data.msg);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [token]);\r\n\treturn {\r\n\t\tisLogged: [isLogged, setIsLogged],\r\n\t\tisAdmin: [isAdmin, setIsAdmin]\r\n\t};\r\n};\r\n\r\nexport default UserAPI;\r\n"]},"metadata":{},"sourceType":"module"}