{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserAPI = token => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [callback, setCallback] = useState();\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/info', {\n            headers: {\n              Authorization: token\n            }\n          }); // console.log(res);\n\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (error) {// alert(error.res.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        if (isAdmin) {\n          const res = await axios.get('/api/payment', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        } else {\n          const res = await axios.get('/user/history', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        }\n      };\n\n      getHistory();\n    }\n  }, [token, callback, isAdmin]); //if dev [token, callback => no run bc token,callback not change]\n\n  const addCart = async product => {\n    if (!isLogged) return alert('Please Login To Continue buying'); //Check this product on cart??\n\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert('This product has been added to cart');\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    callback: [callback, setCallback]\n  };\n};\n\n_s(UserAPI, \"tjHCxzSLZiHi3nT9ce0dOK65BmE=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/Ecommerce/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","callback","setCallback","getUser","res","get","headers","Authorization","data","role","error","getHistory","addCart","product","alert","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserAPI = (token) => {\r\n\tconst [isLogged, setIsLogged] = useState(false);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst [cart, setCart] = useState([]);\r\n\tconst [history, setHistory] = useState([]);\r\n\tconst [callback, setCallback] = useState();\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconst getUser = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await axios.get('/user/info', {\r\n\t\t\t\t\t\theaders: { Authorization: token }\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// console.log(res);\r\n\r\n\t\t\t\t\tsetIsLogged(true);\r\n\t\t\t\t\tres.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n\t\t\t\t\tsetCart(res.data.cart);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// alert(error.res.data.msg);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [token]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconst getHistory = async () => {\r\n\t\t\t\tif (isAdmin) {\r\n\t\t\t\t\tconst res = await axios.get('/api/payment', {\r\n\t\t\t\t\t\theaders: { Authorization: token }\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetHistory(res.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst res = await axios.get('/user/history', {\r\n\t\t\t\t\t\theaders: { Authorization: token }\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetHistory(res.data);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetHistory();\r\n\t\t}\r\n\t}, [token, callback, isAdmin]); //if dev [token, callback => no run bc token,callback not change]\r\n\r\n\tconst addCart = async (product) => {\r\n\t\tif (!isLogged) return alert('Please Login To Continue buying');\r\n\r\n\t\t//Check this product on cart??\r\n\t\tconst check = cart.every((item) => {\r\n\t\t\treturn item._id !== product._id;\r\n\t\t});\r\n\r\n\t\tif (check) {\r\n\t\t\tsetCart([...cart, { ...product, quantity: 1 }]);\r\n\r\n\t\t\tawait axios.patch(\r\n\t\t\t\t'/user/addcart',\r\n\t\t\t\t{ cart: [...cart, { ...product, quantity: 1 }] },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { Authorization: token }\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\talert('This product has been added to cart');\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tisLogged: [isLogged, setIsLogged],\r\n\t\tisAdmin: [isAdmin, setIsAdmin],\r\n\t\tcart: [cart, setCart],\r\n\t\taddCart: addCart,\r\n\t\thistory: [history, setHistory],\r\n\t\tcallback: [callback, setCallback]\r\n\t};\r\n};\r\n\r\nexport default UserAPI;\r\n"]},"metadata":{},"sourceType":"module"}